#Evidencia1_ResaltadorDeSintaxis
#María Viridiana Suárez Hernández
#A01368664
#1 de Junio de 2023

import os #Libreria que nos ayuda a trabajar con archivos

##### MATRIZ DE ESTADOS
#     d  l  e  -  +  *  /  <  >  =  .  ;  :  (  )  {  }  [  ]  ~ \t  !  "  '  #  %  &  |  ^  @  _  , \n
M = [
    [ 2, 1, 1,17,16, 7,19,11,13,10,26,29,25,72,73,74,75,78,79,76,77,15, 8, 9, 6,21,22,23,24,18,80,82,83],
    [ 1, 1, 1,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30, 1,30,30],
    [ 2,31,31,31,31,31,31,31,31,31, 3,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31],
    [ 3,32, 4,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32],
    [ 4,32,32, 5,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32],
    [ 5,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32],
    [ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,33],
    [35,35,35,35,35,28,35,35,35,34,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35],
    [ 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,37, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
    [ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,37, 9, 9, 9, 9, 9, 9, 9, 9, 8],
    [38,38,38,38,38,38,38,38,38,39,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38],
    [40,40,40,40,40,40,40,12,40,41,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40],
    [42,42,42,42,42,42,42,42,42,43,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42],
    [44,44,44,44,44,44,44,44,14,45,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44],
    [47,47,47,47,47,47,47,47,47,46,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47],
    [84,84,84,84,84,84,84,84,84,48,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84],
    [49,49,49,49,49,49,49,49,49,50,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49],
    [51,51,51,51,51,51,51,51,52,53,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51],
    [54,54,54,54,54,54,54,54,54,55,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54],
    [56,56,56,56,56,56,20,56,56,57,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56],
    [58,58,58,58,58,58,58,58,58,59,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58],
    [60,60,60,60,60,60,60,60,60,61,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60],
    [62,62,62,62,62,62,62,62,62,63,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62],
    [64,64,64,64,64,64,64,64,64,65,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64],
    [66,66,66,66,66,66,66,66,66,67,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66],
    [68,68,68,68,68,68,68,68,68,69,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68],
    [70,70,70,70,70,70,70,70,70,70,27,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70],
    [70,70,70,70,70,70,70,70,70,70,71,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70],
    [36,36,36,36,36,36,36,36,36,81,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36]
    ]

##### ALFABETO 

alfa = '0123456789aAbBcCdDeEfFgGhHiIjJkKmMnNlLoOpPqQrRstSTuUvVwWxXyYzZ \t+*-^=()/_.\n#[]!"\':,;%&^~{}!@<>|'

##### COLUMNAS SEGÚN EL TOKEN DETECTADO

digito = '0123456789' #0

letra = 'aAbBcCdDeEfFgGhHiIjJkKmMnNlLoOpPqQrRstSTuUvVwWxXyYzZ' #1

col = {'e': 2, '-': 3, '+': 4, '*': 5, '/': 6,  '<': 7, '>': 8, '=': 9, '.' :10, ';':11, ':':12, '(':13,
       ')':14, '{':15, '}':16, '[':17, ']':18,  '~':19, '!':21, '"':22, '\'':23, '#':24, '%':25, '&':26,
       '|':27, '^':28, '@':29, '_':30, ',':31, '\n':32}

esp = ' \t' #20

##### COLORES PARA ASIGNAR A LOS TOKENS

color = {30:"#EF5350", 31:"#EC407A", 32:"#AB47BC", 33:"#7E57C2", 34:"#5C6BC0", 35:"#42A5F5", 36:"#26C6DA", 37:"#26A69A",
         38:"#66BB6A", 39:"#9CCC65", 40:"#D4E157", 41:"#FFEE58", 42:"#FFCA28", 43:"#FFA726", 44:"#FF7043", 45:"#8D6E63",
         46:"#B71C1C", 47:"#880E4F", 48:"#4A148C", 49:"#311B92", 50:"#1A237E", 51:"#0D47A1", 52:"#01579B", 53:"#006064",
         54:"#004D40", 55:"#1B5E20", 56:"#33691E", 57:"#827717", 58:"#F57F17", 59:"#FF6F00", 60:"#E65100", 61:"#BF360C",
         62:"#3E2723", 63:"#D32F2F", 64:"#C2185B", 65:"#7B1FA2", 66:"#512DA8", 67:"#303F9F", 68:"#1976D2", 69:"#0288D1",
         70:"#0097A7", 71:"#00796B", 72:"#388E3C", 73:"#689F38", 74:"#AFB42B", 75:"#FBC02D", 76:"#FFA000", 77:"#FFFFFF",
         78:"#E64A19", 79:"#F57C00", 81:"#FFCDD2", 80:"#000000", 82:"#E1BEE7", 84:"#000000", 29:"#BCAAA4"}

##### PALABRAS RESERVADAS

reserv = ['False','break','for','not','None','class','from ','or','True','continue','global','pass','def',
          'if','raise','and','del','import','return','as','elif','in','try','assert','else','is', 'while',
          'async','except','lambda','with','await','finally','nonlocal','yield']

##### CARÁCTER POR ESTADO

carac = {82:','  , 29:';' , 34:'*=', 35:'*', 36:'**', 38:'=', 39:'==', 40:'<' , 41:'<=' , 42:'<<', 43:'<<=', 44:'>' , 45:'>=' ,
         46:'>>=', 47:'>>', 48:'!=', 49:'+', 50:'+=', 51:'-', 52:'->', 53:'-=', 54:'@'  , 55:'@=', 56:'/'  , 57:'/=', 58:'//' ,
         59:'//=', 60:'%' , 61:'%=', 62:'&', 63:'&=', 64:'|', 65:'|=', 66:'^' , 67:'^=' , 68:':' , 69:':=' , 70:'.' , 71:'...',
         72:'('  , 73:')' , 74:'{' , 75:'}', 76:'~' , 77:'_', 78:'[' , 79:']',  81:'**=', 84:'!' }


##### VARIABLES INICIALES

estado = 0

act = ''

final = ''

###### FUNCIONES

#Función    : Detectar los tokens contenidos en un string hasta que encuentra un salto de línea.
#Parámetros : String a analizar.
#Retorno    : No retorna valores, sin embargo, incluye en la variable global 'total' la etiqueta html con el token identificado
#             y el color que le corresponde.
def detecta(linea):
    pos = 0
    act = ''
    estado = 0
    final = '<div>'

    while estado != 83:
        print(c)
        c = linea[pos]
        
        #Ubica el estado
        if c == 'e':
            estado = M[estado][2]      
        elif c in digito:
            estado = M[estado][0]
        elif c in letra:
            estado = M[estado][1] 
        elif c in esp:
            estado = M[estado][20]
        elif c not in alfa:
            if estado not in [8, 9, 6]:
                estado = 80
        else:
            estado = M[estado][col[c]]

        #Une caracteres para formar un único token y/o genera la etiqueta del token identificado
        if estado in [1, 2, 3, 4, 5, 6, 8, 9, 80]:
            act += c
        elif estado == 30: #Variables y palabras reservadas
            if act in reserv:
                final += '\n<font face="Courier New" color = '+ color[estado]+'>'+act+'</font>'
            else:
                final += '\n<font face="Courier New" color = "#B5E045">'+act+'</font>'
            act = ''
            estado = 0
            pos -=1
        elif estado in [31, 32, 33]: #Tokens de varios caracteres que llegan al estado final al detectar un token que no corresponda
            final += '\n<font face="Courier New" color = '+ color[estado]+'>'+act+'</font>'
            act = ''
            estado = 0
            pos -=1
        elif estado in[35, 36, 38, 40, 42, 44, 47, 49, 51, 54, 56, 58, 60, 62, 64, 66, 68, 70, 84]: #Tokens específicos contenidos en el diccionario
            final += '\n<font  face="Courier New" color = '+ color[estado]+'>'+carac[estado]+'</font>'
            act = ''
            estado = 0
            pos -=1
        elif estado in [34, 81, 39, 41, 43, 45, 46, 48, 50, 52, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 29, 72, 73, 74, 75, 76, 77, 78, 79, 82]:#Tokens específicos contenidos en el diccionario
            final += '\n<font face="Courier New" color = '+ color[estado]+'>'+carac[estado]+'</font>'
            act = ''
            estado = 0
        elif estado == 37: #Stings
            act+=c
            final += '\n<font face="Courier New" color = '+ color[estado]+'>'+act+'</font>'
            act = ''
            estado = 0
        if estado == 80: #Caracteres fuera del alfabeto
            final += '\n<font face="Courier New" color = '+ color[estado]+'>'+act+'</font>'
            act = ''
            estado = 0
   
        pos += 1

    return final
